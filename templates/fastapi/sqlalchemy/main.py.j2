"""
FastAPI Application
Generated by RDT v2.0
"""
from fastapi import FastAPI
from contextlib import asynccontextmanager
{% if auth_enabled -%}
from fastapi.middleware.cors import CORSMiddleware
{% endif -%}

from src.database import init_db, close_db
from src.api.routes import router


@asynccontextmanager
async def lifespan(app: FastAPI):
    """Application lifespan events"""
    # Startup
    await init_db()
    print("âœ… Database initialized")
    yield
    # Shutdown
    await close_db()
    print("ðŸ”Œ Database connection closed")


app = FastAPI(
    title="{{ name | title_case }} API",
    description="API generated with RDT v2.0",
    version="1.0.0",
    lifespan=lifespan,
{% if auth_enabled -%}
    docs_url="/docs",
    redoc_url="/redoc",
    openapi_url="/openapi.json"
{% endif -%}
)

{% if auth_enabled -%}
# CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # In production, specify allowed origins
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
{% endif -%}

# Include routers
app.include_router(router, prefix="/api")


@app.get("/")
async def root():
    """Health check endpoint"""
    return {
        "status": "ok",
        "message": "{{ name | title_case }} API is running",
        "version": "1.0.0"
    }


@app.get("/health")
async def health_check():
    """Detailed health check"""
    return {
        "status": "healthy",
        "database": "connected",
        "api_version": "1.0.0"
    }