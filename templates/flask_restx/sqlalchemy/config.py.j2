"""
Application configuration
Generated by RDT v2.0
"""
import os
from pydantic import Field
from pydantic_settings import BaseSettings, SettingsConfigDict


class Settings(BaseSettings):
    """Application settings with validation"""
    
    model_config = SettingsConfigDict(
        env_file=".env",
        env_file_encoding="utf-8",
        case_sensitive=False,
    )
    
    # Application
    app_name: str = "{{ name }}"
    environment: str = Field(default="development")
    debug: bool = Field(default=True)
    
    # Server
    host: str = "0.0.0.0"
    port: int = Field(default={{ port }})
    
    # Database
    database_url: str = Field(
        default="sqlite:///{{ name }}.db",
        description="Database connection URL"
    )
    
    # SQLAlchemy
    sqlalchemy_track_modifications: bool = False
    sqlalchemy_echo: bool = False
    
    {% if auth_enabled -%}
    # JWT
    jwt_secret_key: str = Field(
        default="change-this-secret-key",
        min_length=32,
        description="JWT secret key"
    )
    jwt_algorithm: str = "HS256"
    jwt_access_token_expires: int = 3600
    {% endif -%}


# Singleton instance
settings = Settings()


# Flask Config class (for compatibility)
class Config:
    """Flask configuration"""
    SQLALCHEMY_DATABASE_URI = settings.database_url
    SQLALCHEMY_TRACK_MODIFICATIONS = settings.sqlalchemy_track_modifications
    SQLALCHEMY_ECHO = settings.sqlalchemy_echo
    DEBUG = settings.debug
    {% if auth_enabled -%}
    JWT_SECRET_KEY = settings.jwt_secret_key
    JWT_ALGORITHM = settings.jwt_algorithm
    {% endif -%}