# Test Environment Configuration
# This file overrides .env for testing
# Copy this file to .env.test and modify as needed

# Application Settings  
APP_NAME={{ name | title_case }}
ENVIRONMENT=testing
DEBUG=False
LOG_LEVEL=ERROR

# Database Configuration - SQLite for fast tests by default
DATABASE_URL=sqlite:///:memory:
TEST_DB_TYPE=sqlite

# For PostgreSQL testing (uncomment and configure):
# TEST_DB_TYPE=postgresql
# TEST_DB_HOST=localhost
# TEST_DB_PORT=5432
# TEST_DB_USER=postgres
# TEST_DB_PASSWORD=1234
# TEST_DB_NAME=test_{{ name.lower().replace('-', '_').replace(' ', '_') }}

# For MySQL testing (uncomment and configure):
# TEST_DB_TYPE=mysql
# TEST_DB_HOST=localhost
# TEST_DB_PORT=3306
# TEST_DB_USER=root
# TEST_DB_PASSWORD=password
# TEST_DB_NAME=test_{{ name.lower().replace('-', '_').replace(' ', '_') }}

{% if auth_enabled %}
# JWT Authentication
JWT_SECRET_KEY=test-secret-key-for-testing-only
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRES=3600
{% endif %}

# Quick setup with Docker:
# PostgreSQL: docker run --name test-postgres -e POSTGRES_PASSWORD=1234 -e POSTGRES_DB=test_{{ name.lower().replace('-', '_').replace(' ', '_') }} -p 5432:5432 -d postgres:13
# MySQL: docker run --name test-mysql -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=test_{{ name.lower().replace('-', '_').replace(' ', '_') }} -p 3306:3306 -d mysql:8.0