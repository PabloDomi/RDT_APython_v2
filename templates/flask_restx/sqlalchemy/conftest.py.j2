"""
Pytest configuration and fixtures
Generated by RDT v2.0
"""
import pytest
from src import create_app
from src.extensions import db as _db
from src.models.models import User


@pytest.fixture(scope='session')
def app():
    """Create application for testing"""
    app = create_app()
    
    with app.app_context():
        _db.create_all()
        yield app
        _db.drop_all()


@pytest.fixture(scope='function')
def db(app):
    """Create clean database for each test"""
    with app.app_context():
        _db.session.begin_nested()
        yield _db
        _db.session.rollback()
        _db.session.remove()


@pytest.fixture(scope='function')
def client(app):
    """Create test client"""
    return app.test_client()

{% if auth_enabled %}

@pytest.fixture(scope='function')
def test_user(db):
    """Create test user"""
    user = User(username='testuser', email='test@example.com')
    user.set_password('TestPassword123!')
    db.session.add(user)
    db.session.commit()
    return user


@pytest.fixture(scope='function')
def auth_token(client, test_user):
    """Get authentication token"""
    response = client.post('/auth/login', json={
        'username': 'testuser',
        'password': 'TestPassword123!'
    })
    return response.json['access_token']


@pytest.fixture(scope='function')
def auth_headers(auth_token):
    """Get authorization headers"""
    return {
        'Authorization': f'Bearer {auth_token}',
        'Content-Type': 'application/json'
    }
{% endif %}