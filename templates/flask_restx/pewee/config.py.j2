"""
Application configuration for Flask + Peewee
Generated by RDT v2.0
"""
from pydantic import Field
from pydantic_settings import BaseSettings, SettingsConfigDict


class Settings(BaseSettings):
    """Application settings with validation"""
    
    model_config = SettingsConfigDict(
        env_file=".env",
        env_file_encoding="utf-8",
        case_sensitive=False,
    )
    
    # Application
    app_name: str = Field(default="{{ name }}")
    environment: str = Field(default="development")
    debug: bool = Field(default=True)
    
    # Server
    host: str = Field(default="0.0.0.0")
    port: int = Field(default={{ port }})
    
    # API Configuration
    api_prefix: str = Field(default="/api")
    docs_url: str = Field(default="/docs")
    redoc_url: str = Field(default="/redoc")
    openapi_url: str = Field(default="/openapi.json")
    
    # CORS
    cors_origins: str = Field(default='["http://localhost:3000", "http://localhost:8000"]')
    
    # Logging
    log_level: str = Field(default="INFO")
    
    # Database - Peewee uses different format
{% if database == 'PostgreSQL' -%}
        database_name: str = Field(default="{{ name }}_db")
    database_host: str = Field(default="localhost")
    database_port: int = Field(default=5432)
    database_user: str = Field(default="postgres")
    database_password: str = Field(default="postgres")
    database_url: str = Field(default="postgresql://postgres:postgres@localhost:5432/{{ name }}_db")
{% elif database == 'MySQL' -%}
    database_name: str = Field(default="{{ name }}_db")
    database_host: str = Field(default="localhost")
    database_port: int = Field(default=3306)
    database_user: str = Field(default="root")
    database_password: str = Field(default="root")
    database_url: str = Field(default="mysql://root:root@localhost:3306/{{ name }}_db")
{% elif database == 'SQLite' -%}
    database_name: str = Field(default="{{ name }}.db")
    database_url: str = Field(default="sqlite+aiosqlite:///./{{ name }}.db")
{% endif -%}
    
{% if auth_enabled -%}
        # JWT
    jwt_secret_key: str = Field(
        default="change-this-secret-key-minimum-32-chars",
        min_length=32,
        description="JWT secret key"
    )
    jwt_algorithm: str = Field(default="HS256")
    jwt_access_token_expires: int = Field(default=3600)
{% endif -%}



# Singleton instance
settings = Settings()


# Flask Config class
class Config:
    """Flask configuration for Peewee"""
    DEBUG = settings.debug
{% if auth_enabled -%}
        JWT_SECRET_KEY = settings.jwt_secret_key
    JWT_ALGORITHM = settings.jwt_algorithm
{% endif -%}
    

    # Peewee database config
    DATABASE = {
{% if database == 'PostgreSQL' -%}
                'name': settings.database_name,
        'engine': 'peewee.PostgresqlDatabase',
        'user': settings.database_user,
        'password': settings.database_password,
        'host': settings.database_host,
        'port': settings.database_port,
{% elif database == 'MySQL' -%}
                'name': settings.database_name,
        'engine': 'peewee.MySQLDatabase',
        'user': settings.database_user,
        'password': settings.database_password,
        'host': settings.database_host,
        'port': settings.database_port,
{% elif database == 'SQLite' -%}
                'name': settings.database_name,
        'engine': 'peewee.SqliteDatabase',
{% endif -%}
        }
