"""
Flask application factory with Peewee ORM
Generated by RDT v2.0
"""
from dotenv import load_dotenv
from flask import Flask
from src.config.config import Config
from src.extensions import api, db{% if auth_enabled %}, jwt{% endif %}
from src.models.models import User
from src.routes.routes_example import user_ns


def create_app():
    """Application factory pattern"""
    load_dotenv()

    app = Flask(__name__)
    app.config.from_object(Config)

    # Initialize Peewee database
    db.init_app(app)
    
    # Initialize Flask-Restx
    api.init_app(app)
    
    {% if auth_enabled -%}
    # Initialize JWT
    jwt.init_app(app)
    {% endif -%}

    # Register namespaces
    api.add_namespace(user_ns)
    
    # Create tables
    with app.app_context():
        db.database.create_tables([User])

    return app

{% if auth_enabled %}

# JWT Configuration
@jwt.user_identity_loader
def user_identity_lookup(user):
    """Store user ID in token 'sub' field"""
    return user.id


@jwt.user_lookup_loader
def user_lookup_callback(_jwt_header, jwt_data):
    """Load user from token 'sub' field"""
    identity = jwt_data["sub"]
    try:
        return User.get_by_id(identity)
    except User.DoesNotExist:
        return None
{% endif %}