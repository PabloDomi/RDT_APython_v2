version: '3.8'

services:
  app:
    build: .
    container_name: test_app
    ports:
      - "5300:5300"
    environment:
      - DATABASE_URL=${DATABASE_URL}
- JWT_SECRET_KEY=${JWT_SECRET_KEY}
- ENVIRONMENT=${ENVIRONMENT:-development}
depends_on:
      db:
        condition: service_healthy
volumes:
      - .:/app
    networks:
      - app-network
    restart: unless-stopped

db:
    image: postgres:15-alpine
    container_name: test_db
    environment:
      POSTGRES_USER: ${PGUSER:-postgres}
      POSTGRES_PASSWORD: ${PGPASSWORD:-postgres}
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
redis:
    image: redis:7-alpine
    container_name: test_redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
postgres_data:
